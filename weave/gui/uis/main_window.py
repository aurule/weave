# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'weave/gui/uis/main_window.ui'
#
# Created by: PyQt5 UI code generator 5.7.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(781, 606)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.main_splitter = QtWidgets.QSplitter(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_splitter.sizePolicy().hasHeightForWidth())
        self.main_splitter.setSizePolicy(sizePolicy)
        self.main_splitter.setOrientation(QtCore.Qt.Horizontal)
        self.main_splitter.setHandleWidth(2)
        self.main_splitter.setObjectName("main_splitter")
        self.graph_view = QtWidgets.QGraphicsView(self.main_splitter)
        self.graph_view.setRenderHints(QtGui.QPainter.Antialiasing|QtGui.QPainter.TextAntialiasing)
        self.graph_view.setObjectName("graph_view")
        self.detail_editor_box = QtWidgets.QGroupBox(self.main_splitter)
        self.detail_editor_box.setObjectName("detail_editor_box")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.detail_editor_box)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.detail_title_label = QtWidgets.QLabel(self.detail_editor_box)
        self.detail_title_label.setObjectName("detail_title_label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.detail_title_label)
        self.detail_title_edit = QtWidgets.QLineEdit(self.detail_editor_box)
        self.detail_title_edit.setObjectName("detail_title_edit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.detail_title_edit)
        self.gridLayout_2.addLayout(self.formLayout, 0, 0, 1, 1)
        self.detail_description_edit = QtWidgets.QTextEdit(self.detail_editor_box)
        self.detail_description_edit.setObjectName("detail_description_edit")
        self.gridLayout_2.addWidget(self.detail_description_edit, 1, 0, 1, 1)
        self.verticalLayout.addWidget(self.main_splitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 781, 30))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuOpen_Recent = QtWidgets.QMenu(self.menuFile)
        icon = QtGui.QIcon.fromTheme("document-open-recent")
        self.menuOpen_Recent.setIcon(icon)
        self.menuOpen_Recent.setObjectName("menuOpen_Recent")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.story_toolbar = QtWidgets.QToolBar(MainWindow)
        self.story_toolbar.setMovable(True)
        self.story_toolbar.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.story_toolbar.setObjectName("story_toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.story_toolbar)
        self.plot_toolbar = QtWidgets.QToolBar(MainWindow)
        self.plot_toolbar.setMovable(True)
        self.plot_toolbar.setObjectName("plot_toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.plot_toolbar)
        self.actionNew_Beat = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("insert-more-mark")
        self.actionNew_Beat.setIcon(icon)
        self.actionNew_Beat.setObjectName("actionNew_Beat")
        self.actionNew_Plot = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-new")
        self.actionNew_Plot.setIcon(icon)
        self.actionNew_Plot.setObjectName("actionNew_Plot")
        self.actionNew_Story = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("documentation")
        self.actionNew_Story.setIcon(icon)
        self.actionNew_Story.setObjectName("actionNew_Story")
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.actionSave.setIcon(icon)
        self.actionSave.setObjectName("actionSave")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open")
        self.actionOpen.setIcon(icon)
        self.actionOpen.setObjectName("actionOpen")
        self.actionClear_history = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("edit-clear")
        self.actionClear_history.setIcon(icon)
        self.actionClear_history.setObjectName("actionClear_history")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("application-exit")
        self.actionQuit.setIcon(icon)
        self.actionQuit.setObjectName("actionQuit")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save-as")
        self.actionSave_As.setIcon(icon)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("edit-copy")
        self.actionCopy.setIcon(icon)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("edit-paste")
        self.actionPaste.setIcon(icon)
        self.actionPaste.setObjectName("actionPaste")
        self.actionCut = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("edit-cut")
        self.actionCut.setIcon(icon)
        self.actionCut.setObjectName("actionCut")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("delete")
        self.actionDelete.setIcon(icon)
        self.actionDelete.setObjectName("actionDelete")
        self.actionSelect_All = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("edit-select-all")
        self.actionSelect_All.setIcon(icon)
        self.actionSelect_All.setObjectName("actionSelect_All")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("help-about")
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName("actionAbout")
        self.menuOpen_Recent.addSeparator()
        self.menuOpen_Recent.addAction(self.actionClear_history)
        self.menuFile.addAction(self.actionNew_Story)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.menuOpen_Recent.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionDelete)
        self.menuEdit.addAction(self.actionSelect_All)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.story_toolbar.addAction(self.actionSave)
        self.story_toolbar.addAction(self.actionOpen)
        self.plot_toolbar.addAction(self.actionNew_Beat)
        self.plot_toolbar.addAction(self.actionNew_Plot)
        self.detail_title_label.setBuddy(self.detail_title_edit)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.detail_title_edit, self.detail_description_edit)
        MainWindow.setTabOrder(self.detail_description_edit, self.graph_view)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.detail_editor_box.setTitle(_translate("MainWindow", "Detail"))
        self.detail_title_label.setText(_translate("MainWindow", "Tit&le"))
        self.detail_description_edit.setPlaceholderText(_translate("MainWindow", "Description"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuOpen_Recent.setTitle(_translate("MainWindow", "Recent Stories"))
        self.menuEdit.setTitle(_translate("MainWindow", "&Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "&Help"))
        self.story_toolbar.setWindowTitle(_translate("MainWindow", "Story Tools"))
        self.plot_toolbar.setWindowTitle(_translate("MainWindow", "Plot Tools"))
        self.actionNew_Beat.setText(_translate("MainWindow", "New &Beat"))
        self.actionNew_Beat.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionNew_Plot.setText(_translate("MainWindow", "New &Plot"))
        self.actionNew_Plot.setShortcut(_translate("MainWindow", "Ctrl+Shift+N"))
        self.actionNew_Story.setText(_translate("MainWindow", "New Story"))
        self.actionSave.setText(_translate("MainWindow", "&Save"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save Story"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionOpen.setText(_translate("MainWindow", "&Open"))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open..."))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionClear_history.setText(_translate("MainWindow", "Clear History"))
        self.actionQuit.setText(_translate("MainWindow", "&Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionSave_As.setText(_translate("MainWindow", "Save &As..."))
        self.actionCopy.setText(_translate("MainWindow", "&Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Past&e"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionCut.setText(_translate("MainWindow", "Cu&t"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionDelete.setText(_translate("MainWindow", "&Delete"))
        self.actionSelect_All.setText(_translate("MainWindow", "Select &All"))
        self.actionSelect_All.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.actionAbout.setText(_translate("MainWindow", "&About Weave"))

